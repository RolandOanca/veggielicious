{"ast":null,"code":"var _jsxFileName = \"/Users/roland/Documents/Projects/Reac/veggielicious/src/components/UI/Button/ButtonCustom.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Row, Col, Image, Modal } from 'react-bootstrap';\nimport classes from './ButtonCustom.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ButtonCustom = props => {\n  _s();\n\n  const values = [true, 'sm-down', 'md-down', 'lg-down', 'xl-down', 'xxl-down'];\n  const [fullscreen, setFullscreen] = useState(true);\n  const [show, setShow] = useState(false);\n\n  function handleShow(breakpoint) {\n    setFullscreen(breakpoint);\n    setShow(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.custom_btn,\n      onClick: props.onClick,\n      children: \"See Menu\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      fullscreen: fullscreen,\n      onHide: () => setShow(false),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Modal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: \"Modal body content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ButtonCustom, \"r1BdtmaL5kfnF9ZWQx7Jab+0RYs=\");\n\n_c = ButtonCustom;\nexport default ButtonCustom;\n\nvar _c;\n\n$RefreshReg$(_c, \"ButtonCustom\");","map":{"version":3,"sources":["/Users/roland/Documents/Projects/Reac/veggielicious/src/components/UI/Button/ButtonCustom.jsx"],"names":["React","useState","Container","Row","Col","Image","Modal","classes","ButtonCustom","props","values","fullscreen","setFullscreen","show","setShow","handleShow","breakpoint","custom_btn","onClick"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAO,sCAAP;AACA,SAASC,SAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,KAA/B,EAAsCC,KAAtC,QAAoD,iBAApD;AAGA,OAAOC,OAAP,MAAoB,2BAApB;;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAMC,MAAM,GAAG,CAAC,IAAD,EAAO,SAAP,EAAkB,SAAlB,EAA6B,SAA7B,EAAwC,SAAxC,EAAmD,UAAnD,CAAf;AAEA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,KAAD,CAAhC;;AAEA,WAASc,UAAT,CAAoBC,UAApB,EAAgC;AAC9BJ,IAAAA,aAAa,CAACI,UAAD,CAAb;AACAF,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD;;AACC,sBAAS;AAAA,4BACL;AAAK,MAAA,SAAS,EAAEP,OAAO,CAACU,UAAxB;AAAoC,MAAA,OAAO,EAAER,KAAK,CAACS,OAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADK,eAEL,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEL,IAAb;AAAmB,MAAA,UAAU,EAAEF,UAA/B;AAA2C,MAAA,MAAM,EAAE,MAAMG,OAAO,CAAC,KAAD,CAAhE;AAAA,8BACA,QAAC,KAAD,CAAO,MAAP;AAAc,QAAA,WAAW,MAAzB;AAAA,+BACA,QAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cADA,eAIA,QAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFK;AAAA,kBAAT;AAUH,CApBD;;GAAMN,Y;;KAAAA,Y;AAsBN,eAAeA,YAAf","sourcesContent":["\nimport React, { useState } from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container , Row, Col, Image, Modal  } from 'react-bootstrap';\n\n\nimport classes from './ButtonCustom.module.css';\n\nconst ButtonCustom = (props) => {\n  const values = [true, 'sm-down', 'md-down', 'lg-down', 'xl-down', 'xxl-down'];\n    \n  const [fullscreen, setFullscreen] = useState(true);\n  const [show, setShow] = useState(false);\n\n  function handleShow(breakpoint) {\n    setFullscreen(breakpoint);\n    setShow(true);\n  }\n    return ( <>\n        <div className={classes.custom_btn} onClick={props.onClick}>See Menu</div>\n        <Modal show={show} fullscreen={fullscreen} onHide={() => setShow(false)}>\n        <Modal.Header closeButton>\n        <Modal.Title>Modal</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>Modal body content</Modal.Body>\n        </Modal>\n        </>\n    )\n}\n\nexport default ButtonCustom;\n\n"]},"metadata":{},"sourceType":"module"}