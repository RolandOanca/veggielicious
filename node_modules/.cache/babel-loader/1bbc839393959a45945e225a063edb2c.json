{"ast":null,"code":"var _jsxFileName = \"/Users/roland/Documents/Projects/Reac/veggielicious/src/components/Modal/Modal.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Image, Offcanvas, Button } from 'react-bootstrap';\nimport chart from \"../../assets/chart.svg\";\nimport classes from './OffCanvasExample.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ModalMenu = () => {\n  _s();\n\n  const values = [true, 'sm-down', 'md-down', 'lg-down', 'xl-down', 'xxl-down'];\n  const [fullscreen, setFullscreen] = useState(true);\n  const [show, setShow] = useState(false);\n\n  function handleShow(breakpoint) {\n    setFullscreen(breakpoint);\n    setShow(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [values.map((v, idx) => /*#__PURE__*/_jsxDEV(Button, {\n      className: \"me-2\",\n      onClick: () => handleShow(v),\n      children: [\"Full screen\", typeof v === 'string' && `below ${v.split('-')[0]}`]\n    }, idx, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      fullscreen: fullscreen,\n      onHide: () => setShow(false),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Modal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: \"Modal body content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ModalMenu, \"r1BdtmaL5kfnF9ZWQx7Jab+0RYs=\");\n\n_c = ModalMenu;\nexport default ModalMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalMenu\");","map":{"version":3,"sources":["/Users/roland/Documents/Projects/Reac/veggielicious/src/components/Modal/Modal.jsx"],"names":["React","useState","Image","Offcanvas","Button","classes","ModalMenu","values","fullscreen","setFullscreen","show","setShow","handleShow","breakpoint","map","v","idx","split"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAO,sCAAP;AACA,SAAUC,KAAV,EAAiBC,SAAjB,EAA4BC,MAA5B,QAA2C,iBAA3C;;AAIA,OAAOC,OAAP,MAAoB,+BAApB;;;;AAKA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAEtB,QAAMC,MAAM,GAAG,CAAC,IAAD,EAAO,SAAP,EAAkB,SAAlB,EAA6B,SAA7B,EAAwC,SAAxC,EAAmD,UAAnD,CAAf;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,KAAD,CAAhC;;AAEA,WAASW,UAAT,CAAoBC,UAApB,EAAgC;AAC9BJ,IAAAA,aAAa,CAACI,UAAD,CAAb;AACAF,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD;;AAED,sBACE;AAAA,eACGJ,MAAM,CAACO,GAAP,CAAW,CAACC,CAAD,EAAIC,GAAJ,kBACV,QAAC,MAAD;AAAkB,MAAA,SAAS,EAAC,MAA5B;AAAmC,MAAA,OAAO,EAAE,MAAMJ,UAAU,CAACG,CAAD,CAA5D;AAAA,gCAEG,OAAOA,CAAP,KAAa,QAAb,IAA0B,SAAQA,CAAC,CAACE,KAAF,CAAQ,GAAR,EAAa,CAAb,CAAgB,EAFrD;AAAA,OAAaD,GAAb;AAAA;AAAA;AAAA;AAAA,YADD,CADH,eAOE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEN,IAAb;AAAmB,MAAA,UAAU,EAAEF,UAA/B;AAA2C,MAAA,MAAM,EAAE,MAAMG,OAAO,CAAC,KAAD,CAAhE;AAAA,8BACE,QAAC,KAAD,CAAO,MAAP;AAAc,QAAA,WAAW,MAAzB;AAAA,+BACE,QAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA,kBADF;AAgBD,CA3BD;;GAAML,S;;KAAAA,S;AA6BN,eAAeA,SAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {  Image, Offcanvas, Button  } from 'react-bootstrap';\n\nimport chart from \"../../assets/chart.svg\";\n\nimport classes from './OffCanvasExample.module.css';\n\n\n\n\nconst ModalMenu = () => {\n\n  const values = [true, 'sm-down', 'md-down', 'lg-down', 'xl-down', 'xxl-down'];\n  const [fullscreen, setFullscreen] = useState(true);\n  const [show, setShow] = useState(false);\n\n  function handleShow(breakpoint) {\n    setFullscreen(breakpoint);\n    setShow(true);\n  }\n\n  return (\n    <>\n      {values.map((v, idx) => (\n        <Button key={idx} className=\"me-2\" onClick={() => handleShow(v)}>\n          Full screen\n          {typeof v === 'string' && `below ${v.split('-')[0]}`}\n        </Button>\n      ))}\n      <Modal show={show} fullscreen={fullscreen} onHide={() => setShow(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Modal</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>Modal body content</Modal.Body>\n      </Modal>\n    </>\n  );\n}\n\nexport default ModalMenu;\n\n\n\n"]},"metadata":{},"sourceType":"module"}