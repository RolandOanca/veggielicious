{"ast":null,"code":"var _jsxFileName = \"/Users/roland/Documents/Projects/Reac/veggielicious/src/components/UI/Button/ButtonCustom.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport { Tooltip, OverlayTrigger, Button, Overlay, Image } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport chart from \"../../../assets/chart.svg\";\nimport classes from './ButtonCustom.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ButtonCustom() {\n  _s();\n\n  const [show, setShow] = useState(false);\n  const target = useRef(null);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"danger\",\n      ref: target,\n      onClick: () => setShow(!show),\n      children: \"Click me to see\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Overlay, {\n      target: target.current,\n      show: show,\n      placement: \"right\",\n      children: _ref => {\n        let {\n          placement,\n          arrowProps,\n          show: _show,\n          popper,\n          ...props\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"div\", { ...props,\n          style: {\n            backgroundColor: 'rgba(255, 100, 100, 0.85)',\n            padding: '2px 10px',\n            color: 'white',\n            borderRadius: 3,\n            ...props.style\n          },\n          children: \"Simple tooltip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ButtonCustom, \"yDjrBmTqsCuzqqYe0FCtEA+YC6w=\");\n\n_c = ButtonCustom;\nexport default ButtonCustom;\n\nvar _c;\n\n$RefreshReg$(_c, \"ButtonCustom\");","map":{"version":3,"sources":["/Users/roland/Documents/Projects/Reac/veggielicious/src/components/UI/Button/ButtonCustom.jsx"],"names":["React","useState","useRef","Tooltip","OverlayTrigger","Button","Overlay","Image","classes","ButtonCustom","show","setShow","target","current","placement","arrowProps","_show","popper","props","backgroundColor","padding","color","borderRadius","style"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,SAASC,OAAT,EAAmBC,cAAnB,EAAmCC,MAAnC,EAA2CC,OAA3C,EAAoDC,KAApD,QAAmE,iBAAnE;AAEA,OAAO,sCAAP;;AAKA,OAAOC,OAAP,MAAoB,2BAApB;;;;AAEA,SAASC,YAAT,GAAwB;AAAA;;AACpB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAMW,MAAM,GAAGV,MAAM,CAAC,IAAD,CAArB;AAEA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,QAAhB;AAAyB,MAAA,GAAG,EAAEU,MAA9B;AAAsC,MAAA,OAAO,EAAE,MAAMD,OAAO,CAAC,CAACD,IAAF,CAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,OAAD;AAAS,MAAA,MAAM,EAAEE,MAAM,CAACC,OAAxB;AAAiC,MAAA,IAAI,EAAEH,IAAvC;AAA6C,MAAA,SAAS,EAAC,OAAvD;AAAA,gBACG;AAAA,YAAC;AAAEI,UAAAA,SAAF;AAAaC,UAAAA,UAAb;AAAyBL,UAAAA,IAAI,EAAEM,KAA/B;AAAsCC,UAAAA,MAAtC;AAA8C,aAAGC;AAAjD,SAAD;AAAA,4BACC,oBACMA,KADN;AAEE,UAAA,KAAK,EAAE;AACLC,YAAAA,eAAe,EAAE,2BADZ;AAELC,YAAAA,OAAO,EAAE,UAFJ;AAGLC,YAAAA,KAAK,EAAE,OAHF;AAILC,YAAAA,YAAY,EAAE,CAJT;AAKL,eAAGJ,KAAK,CAACK;AALJ,WAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA,kBADF;AAkCD;;GAtCMd,Y;;KAAAA,Y;AAwCP,eAAeA,YAAf","sourcesContent":["\nimport React, { useState, useRef } from 'react';\nimport { Tooltip , OverlayTrigger, Button, Overlay, Image,  } from 'react-bootstrap';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport chart from \"../../../assets/chart.svg\";\n\n\nimport classes from './ButtonCustom.module.css';\n\nfunction ButtonCustom() {\n    const [show, setShow] = useState(false);\n    const target = useRef(null);\n  \n    return (\n      <>\n        <Button variant=\"danger\" ref={target} onClick={() => setShow(!show)}>\n          Click me to see\n        </Button>\n        {/* <Tooltip id=\"button-tooltip\" {...props}>\n            <Image src={chart} className={classes.chart_btn} fluid width='10%'/>\n        </Tooltip> */}\n        <Overlay target={target.current} show={show} placement=\"right\">\n          {({ placement, arrowProps, show: _show, popper, ...props }) => (\n            <div\n              {...props}\n              style={{\n                backgroundColor: 'rgba(255, 100, 100, 0.85)',\n                padding: '2px 10px',\n                color: 'white',\n                borderRadius: 3,\n                ...props.style,\n              }}\n            >\n              Simple tooltip\n            </div>\n          )}\n        </Overlay>\n\n        {/* <OverlayTrigger\n            placement=\"right\"\n            delay={{ show: 250, hide: 400 }}\n            overlay={renderTooltip}\n        >\n            <Button variant=\"success\">Hover me to see</Button>\n        </OverlayTrigger>, */}\n      </>\n    );\n  }\n\n  export default ButtonCustom;\n\n"]},"metadata":{},"sourceType":"module"}