{"ast":null,"code":"var _jsxFileName = \"/Users/roland/Documents/Projects/Reac/veggielicious/src/store/CartProvider.jsx\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from 'react';\nimport CartContext from './cart-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  item: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedItems = state.items.concat(action.item);\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Users/roland/Documents/Projects/Reac/veggielicious/src/store/CartProvider.jsx"],"names":["useReducer","CartContext","defaultCartState","item","totalAmount","cartReducer","state","action","type","updatedItems","items","concat","updatedTotalAmount","price","amount","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","id","cartContext","addItem","removeItem","children"],"mappings":";;;AACA,SAAQA,UAAR,QAAyB,OAAzB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAIA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,IAAI,EAAE,EADe;AAErBC,EAAAA,WAAW,EAAE;AAFQ,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnC,MAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;AACvB,UAAMC,YAAY,GAAGH,KAAK,CAACI,KAAN,CAAYC,MAAZ,CAAmBJ,MAAM,CAACJ,IAA1B,CAArB;AACA,UAAMS,kBAAkB,GAAGN,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACJ,IAAP,CAAYU,KAAZ,GAAoBN,MAAM,CAACJ,IAAP,CAAYW,MAA/E;AACA,WAAO;AACHJ,MAAAA,KAAK,EAAED,YADJ;AAEHL,MAAAA,WAAW,EAAEQ;AAFV,KAAP;AAIH;;AACD,SAAOV,gBAAP;AACH,CAVD;;AAYA,MAAMa,YAAY,GAAGC,KAAK,IAAI;AAAA;;AAC1B,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkClB,UAAU,CAACK,WAAD,EAAcH,gBAAd,CAAlD;;AAEA,QAAMiB,oBAAoB,GAAIhB,IAAD,IAAU;AACnCe,IAAAA,kBAAkB,CAAC;AAACV,MAAAA,IAAI,EAAC,KAAN;AAAaL,MAAAA,IAAI,EAAEA;AAAnB,KAAD,CAAlB;AACH,GAFD;;AAGA,QAAMiB,yBAAyB,GAAIC,EAAD,IAAQ;AACtCH,IAAAA,kBAAkB,CAAC;AAACV,MAAAA,IAAI,EAAC,QAAN;AAAgBa,MAAAA,EAAE,EAAEA;AAApB,KAAD,CAAlB;AACH,GAFD;;AAKA,QAAMC,WAAW,GAAG;AAChBZ,IAAAA,KAAK,EAAEO,SAAS,CAACP,KADD;AAEhBN,IAAAA,WAAW,EAAEa,SAAS,CAACb,WAFP;AAGhBmB,IAAAA,OAAO,EAAGJ,oBAHM;AAIhBK,IAAAA,UAAU,EAAEJ;AAJI,GAApB;AAOA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,WAA7B;AAAA,cACKN,KAAK,CAACS;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAxBD;;GAAMV,Y;;KAAAA,Y;AA0BN,eAAeA,YAAf","sourcesContent":["\nimport {useReducer} from 'react';\nimport CartContext from './cart-context';\n\n\n\nconst defaultCartState = {\n    item: [],\n    totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n    if (action.type === 'ADD') {\n        const updatedItems = state.items.concat(action.item);\n        const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n        return {\n            items: updatedItems,\n            totalAmount: updatedTotalAmount\n        };\n    }\n    return defaultCartState;\n};\n\nconst CartProvider = props => {\n    const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n    const addItemToCartHandler = (item) => {\n        dispatchCartAction({type:'ADD', item: item});\n    };\n    const removeItemFromCartHandler = (id) => {\n        dispatchCartAction({type:'REMOVE', id: id});\n    };\n\n\n    const cartContext = {\n        items: cartState.items,\n        totalAmount: cartState.totalAmount,\n        addItem : addItemToCartHandler,\n        removeItem: removeItemFromCartHandler\n    }\n\n    return (\n        <CartContext.Provider value={cartContext}>\n            {props.children}\n        </CartContext.Provider>\n    )\n    \n};\n\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}